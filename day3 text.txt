Day 3(Morning):-

1.creating a list

 ex:L=[1,4,5.5,"sam"]
print(L)
output: [1,4,5.5,"sam"]

2.Slicing

ex: l[3]
'sam'
l[2:3]
[5.5]
l[2:]
[5.5, 'sam']
l[2:4]
[5.5, 'sam']
l[0:]
[1, 4, 5.5, 'sam']
l[:3]
[1, 4, 5.5]
l[-1]
'sam'
l[::-1]
['sam', 5.5, 4, 1]

3.Operations on list:

append(): Add an element to the end of the list - l.append()
extend(): Add all elements of a list to another list - l.extend()
insert(): Insert an item at defined index - l.index()
remove(): Remove an item from list 
pop(): Removes and returns an element at given index
clear(): Empty the list
index(): Returs the index of first matched item
count(): Returns the count of number of items passed an argument
sort(): Sort items in the list in ascending order
reverse(): Reverse order of items
copy(): Returns the shallow copy

ex:
list=[1,2,3,4,5,6,7,8,9]
l.append(10)
l
[1, 4, 5.5, 'sam', 10]
list.append(10)
list
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
list.extend(l)
l
[1, 4, 5.5, 'sam', 10]
list
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 4, 5.5, 'sam', 10]
l.insert(3,5)
l
[1, 4, 5.5, 5, 'sam', 10]
l.remove(6)
Traceback (most recent call last):
  File "<pyshell#23>", line 1, in <module>
    l.remove(6)
ValueError: list.remove(x): x not in list
l.remove(5)
l
[1, 4, 5.5, 'sam', 10]
l.pop(3)
'sam'
l
[1, 4, 5.5, 10]
l.sort()
l
[1, 4, 5.5, 10]
l.index(1)
0
l.clear()
l
[]

programs;
1.create a list with 10 items print the elements one by one.
2.create a list with 5 float numbers, find the sum and average.
3.create a list with 6 elements from user and print even numbers.

(Afternoon):

program: get list of no's as input, return their product.if the product is less than 750
else return sum.

1.Set:-
 A set is a group of elements which has no dupilicates 





operations on set:
1.s.add(element)
2.s.update([])
3.s,discard(element)
4.s.remove(element)

ex:
  s={1,2,3,4}
type(s)
<class 'set'>
ss={1,1,2,5,7,5,2}
ss
{1, 2, 5, 7}
s.add(25)
s
{1, 2, 3, 4, 25}
s.update([27,09])
SyntaxError: leading zeros in decimal integer literals are not permitted; use an 0o prefix for octal integers
s.update([27,9])
s
{1, 2, 3, 4, 9, 25, 27}
s.discard(4)
s
{1, 2, 3, 9, 25, 27}
s.remove(3)
s
{1, 2, 9, 25, 27}


s1={3,4,5,6,7}
s2={1,2,3,4,5}

UNION:
s1|s2
{1, 2, 3, 4, 5, 6, 7}

INTERSECTION:
s1&s2
{3, 4, 5}

DIFFERENCE:
s1-s2
{6, 7}
s2-s1
{1, 2} 

s.issuperset(s)
{1, 2, 6, 7}
s1.issuperset(s2)
False
 
print(s1.symmetric_difference(s2))
{1, 2, 6, 7}
s1.issuperset(s2)

*TUPLE:

can't change the ordered once u given it is premanent.

t=(1,2,3,4,"pavan")
print(t)
(1, 2, 3, 4, 'pavan')

index:
t.index(4)
3

count:
t.count(4)
1

*dictionary:
dictionary contains elements with two units keys and values and keys must be unique.


d={1:"pavan",2:"icecream"}
    
print(d)
    
{1: 'pavan', 2: 'icecream'}

keys:
d.keys()
    
dict_keys([1, 2])

values:
d.values()
    
dict_values(['pavan', 'icecream'])

items:
d.items()
    
dict_items([(1, 'pavan'), (2, 'icecream')])



